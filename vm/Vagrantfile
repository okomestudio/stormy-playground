# -*- mode: ruby -*-
# vi: set ft=ruby ts=2 sw=2 sts=2 :

common = <<-EOF
sudo apt-get update
sudo apt-get install -y openjdk-7-jre openssh-server python-dev python-virtualenv supervisor 

sudo apt-get install -y git
sudo apt-get install -y libxml2 libxml2-dev libxslt1-dev
sudo apt-get install -y llvm-dev libedit-dev

sudo pip install --upgrade pip

tar xzf /vagrant/apache-storm-0.9.3.tar.gz -C /opt
cp /vagrant/storm.yaml /opt/apache-storm-0.9.3/conf/storm.yaml

sudo sh -c 'cat /vagrant/hosts >> /etc/hosts'

sudo useradd -mU storm
sudo -u storm mkdir /home/storm/.ssh
sudo chmod 700 /home/storm/.ssh
sudo -u storm mkdir /home/storm/logs
sudo chmod 755 /home/storm/logs
sudo cp /vagrant/sshkey.pub /home/storm/.ssh/authorized_keys
sudo chown storm:storm /home/storm/.ssh/authorized_keys

sudo cp /vagrant/boto.cfg /etc/boto.cfg
sudo chmod 644 /etc/boto.cfg

sudo -u storm mkdir /home/storm/virtualenv_root
sudo chown -R storm:storm /opt/apache-storm-0.9.3

sudo sed -ri 's,^#(AuthorizedKeysFile\\s*%h/.ssh/authorized_keys)$,\\1,' /etc/ssh/sshd_config
sudo service ssh restart

cp /vagrant/supervisor.conf /etc/supervisor/conf.d/storm.conf
sudo supervisorctl update
EOF

# set up and start zookeeper, and start nimbus and the web ui here
nimbus_setup = <<-EOF
sudo apt-get install -y zookeeper
sudo /usr/share/zookeeper/bin/zkServer.sh start

sudo supervisorctl start storm-nimbus
sudo supervisorctl start storm-ui
EOF

# just start a worker
worker_setup = <<-EOF
sudo supervisorctl start storm-worker

sudo chmod 755 /vagrant/src
sudo chmod 644 /vagrant/src/*
EOF

Vagrant.configure(2) do |config|

  # one nimbus
  config.vm.define "nimbus" do |nimbus|
	nimbus.vm.box = "chef/debian-7.6"
	nimbus.vm.hostname = "nimbus"
	nimbus.vm.network "private_network", ip: "192.168.56.2"
	nimbus.vm.provision "shell", inline: common
	nimbus.vm.provision "shell", inline: nimbus_setup
  end
  
  # 3 worker boxes
  (1..3).each do |i|
	config.vm.define "worker#{i}" do |worker|
	  worker.vm.box = "chef/debian-7.6"
	  worker.vm.hostname = "worker#{i}"
	  worker.vm.network "private_network", ip: "192.168.56.#{i+2}"
	  worker.vm.provision "shell", inline: common
	  worker.vm.provision "shell", inline: worker_setup
	end
  end

end
